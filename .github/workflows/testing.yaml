---
name: Testing

on:
  push:
    branches: ['main']

  merge_group:
    types: [checks_requested]

  pull_request:
    branches: ['*']

jobs:
  build:
    name: Build executable
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.21.x
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x
        id: go
      - name: Check out code
        uses: actions/checkout@v2
      - name: make install
        run: |
          make install

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      KIND_CLUSTER_NAME: kuadrantctl-local
    steps:
      - name: Set up Go 1.21.x
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x
        id: go
      - name: Check out code
        uses: actions/checkout@v3
      - name: Run tests
        run: |
          make test
      - name: Upload test coverage reports to CodeCov
        # more at https://github.com/codecov/codecov-action
        # Only run if the feature branch is in your repo (not in a fork)
        # as Tokenless uploading is rate limited for public repos
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true

  required-checks:
    name: Testing Required Checks
    # This check adds a list of checks to one job to simplify adding settings to the repo.
    # If a new check is added in this file, and it should be retested on entry to the merge queue,
    # it needs to be added to the list below aka needs: [ existing check 1, existing check 2, new check ].
    needs:
    - build
    - tests
    if: always()
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: echo '${{ toJSON(needs) }}' | jq -e 'all(.[]; .result == "success" or .result == "skipped")'
